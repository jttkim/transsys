#!/usr/bin/env python

# A script to run an optimisation experment.

import transsys
import translattice
import randomLocalSearch

import getopt
import sys
import random
import time


def usage() :
  print """
  --help  switch  : Prints this screen and exit.
  """


# !!!!!!!!!!!! carefull the only default control parameter untill now.... !!!!
#FIXME: This shousl change in proper version of the optimiser.
randomParam = time.strftime('%d%m%Y')
#randomParam = 11032008

# Command line parsing of the control parameters.
optlist, args = getopt.getopt(sys.argv[1:], 'hw:l:o:u:r:t:f:', ['help'])
for opt, par in optlist :
  if opt in ('-h', '--help') :
    usage()
    sys.exit()
  if opt in ('-w') :
    width = int(par)
  if opt in ('-l') :
    height = int(par)
  if opt == '-o' :
    optCycles = int(par)
  if opt == '-u' :
    var = par.split(':')
    if len(var) != 2 :
      raise StandardError, 'Error in the format of -u input option, initial uniform noise should come in the format <min>:<max>'
    low = float(var[0])
    high = float(var[1])
  if opt == '-r' :
    randomParam = int(par)
  if opt == '-t' :
    timesteps = int(par)
  if opt == '-f' :
    perturbationOffset = float(par)

# Construct the objects.
latticeSize = translattice.LatticeSize(width, height)
initialNoise = translattice.UniformParameters(low, high)


# I/O implementation.
if len(args) > 0 :
  infile = open(args[0], 'r')
else :
  infile = sys.stdin
if len(args) > 1 :
  outfile = open(args[1], 'w')
else :
  outfile = sys.stdout

# Parse the transsys program.
#tp = transsys.TranssysProgramParser(infile).parse()

scp = translattice.SimulatorControlParameters(latticeSize, timesteps, initialNoise, randomSeed = int(randomParam))

ocp = randomLocalSearch.OptimisationControlParameters(optCycles, perturbationOffset, int(randomParam))

# the engineered control parameters are hardcoded in the file.
engp = randomLocalSearch.EngineeringParameters(randomLocalSearch.Point(1, 1), randomLocalSearch.Point(9, 14), randomLocalSearch.Circle(randomLocalSearch.Point(10, 10), 2), 0.01, 0.0, 0.01, 0.002)

# !!!!!! extreme care with the filenames. !!!
numericalOut = 'numericalOut' + str(randomParam) + '.dat'
transsysOut = 'transsysProgramsOut' + str(randomParam) + '.tra'

# Instantiate the log keeping object
log = randomLocalSearch.OptimisationBookKeeping(numericalOut, transsysOut, scp, ocp)

# Run the optimiser!
randomLocalSearch.optimisation(engp, scp, ocp, log)

