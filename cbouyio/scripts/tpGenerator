#!/usr/bin/env python

# $Rev::               $:  Revision of last commit
# $Author::            $:  Author of last commit
# $Date$:  Date of last commit

# Generates a transsys program out of a .rtp file (random transsys parameters).
# Inside an .rtp files one can declare parameters such as:
# the model of the transsys program, NK, random graph etc.
# the decay, diffusibility etc. parameters
# check the format of the .rtp files before using this script.

# Prints out in a file the relevant transsys program.
# first developed by cbouyio, UEA, 01 Nov 2005.
# Bug and minor fixes constantly added.

# Indicate the program version
__version__ = "$Id$"

import re
import sys
import getopt

import transsys


def usage():
  print """Usage:
  ./tp_generator [options] (arguments)
    Options:
      -h, --help: Prints this screen.
              -n: Specify a name for the transsys program.
    Arguments:
      <input file> : Should be an .rtp file or a file with the same format.
                     Please check the format of the .rtp files if you are using
                     this script for the first time.
                     (a .rtp file contain's the transsys program parameters)
      <output file>: You might give any filename you want but a .tra suffix
                     nomeclature is recommended.
                     (the .tra files contain transsys programs)"""


# Initial parameters.
name = None


try:
  optlist, args = getopt.getopt(sys.argv[1:],"h,n:",["help"])
except getopt.GetoptError, error_msg :
  # Print help info and exit
  error_msg = 'Error in arguments passing, see help (--help) for more'
  print error_msg
  usage()
  sys.exit(1)

for opt, par in optlist :
  if opt in ('-h', '--help') :
    usage()
    sys.exit(1)
  if opt in ('-n') :
    name = par


# I/O manipulation
if len(args) > 0 :
  infile = open(args[0], 'r')
else :
  infile = sys.stdin
  name = 'STDIN_UserInput'
if len(args) > 1 :
  outfile = open(args[1], 'w')
else :
  outfile = sys.stdout


# Instantiate the RandomTranssysParameters class.
rtp = transsys.RandomTranssysParameters()

# Parse the input file.
rtp.parse(infile)
# Close the input file.
if infile is not sys.stdin :
  infile.close()

# Extract the correspondant transsys program name with a regular expression.
if name == None :
  # Build the regular expression to match 1-3 letters after a dot.
  suffix = re.compile('\.{1}\w{0,3}\Z')
  name = suffix.sub('', str(sys.argv[1]))
  # Substitute the . (dots) and the - (dashes) in parsed filename to be a valid
  # transsys program name.
  s = re.compile('\.{1}|-{1}')
  name = s.sub('_', name)
  # Check the first character not to be digit, if it is prefix an '_'.
  if re.match('^[0-9]{1}', name) :
    name = '_' + name

#print name
#sys.exit()

# Produces the transsys program.
tp = rtp.generate_transsys(name)

# Prints to outfile
outfile.write(tp.__str__())

# Closes the output file.
if outfile is not sys.stdout :
  outfile.close()
