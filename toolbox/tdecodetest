#!/usr/bin/env python

# $Id$

# $Log$
# Revision 1.2  2005/06/15 10:56:12  jtk
# changed gene structure, introduced regexp use for start/end finding
#
# Revision 1.1  2005/06/14 18:35:42  jtk
# transdecode for decoding transsys programs from "DNA" sequences
#

import sys
import getopt
import random
import string

import transsys
import transdecode


def random_sequence(l, rng) :
  s = []
  for i in xrange(l) :
    s.append('acgt'[rng.randrange(4)])
  return string.join(s, '')


decoder = transdecode.TranssysDNADecoder()
decoder.transsysName = 'tdecodetest'
decoder.factorNameTemplate = 'f%03d'
decoder.geneNameTemplate = 'g%03d'
decoder.setGeneStartRE('aa')
decoder.setGeneEndRE('ttt')
decoder.repressorAreaLength = 10
decoder.activatorAreaLength = 10
decoder.decay = 0.3
decoder.diffusibility = 0.1
decoder.a_spec = 0.2
decoder.a_max = 1.0
decoder.constitutive = 0.333
# dnaseq = 'tttttttttttaaggggggggggacgtacgtccccccccc'
dnaseq = None
seq_length = 100
rndseed = 1

options, args = getopt.getopt(sys.argv[1:], 'a:l:p:s:t:h')
for opt in options :
  if opt[0] == '-h' :
    print 'help...'
    sys.exit()
  elif opt[0] == '-p' :
    decoder.setGeneStartRE(opt[1])
  elif opt[0] == '-t' :
    decoder.setGeneEndRE(opt[1])
  elif opt[0] == '-a' :
    decoder.repressorAreaLength = int(opt[1])
    decoder.activatorAreaLength = int(opt[1])
  elif opt[0] == '-s' :
    rndseed = int(opt[1])
  elif opt[0] == '-l' :
    seq_length = int(opt[1])
  else :
    raise StandardError, 'option %s not implemented' % opt[0]
if len(args) > 0 :
  dnaseq = args[0]
else :
  rng = random.Random(rndseed)
  dnaseq = random_sequence(seq_length, rng)

print decoder.decode_transsys(dnaseq)

